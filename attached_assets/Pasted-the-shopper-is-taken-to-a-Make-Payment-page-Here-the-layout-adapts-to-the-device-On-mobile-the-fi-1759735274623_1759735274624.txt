the shopper is taken to a Make Payment page. Here the layout adapts to the device. On mobile, the first and most prominent choice is to pay by opening a UPI app such as GPay, PhonePe, or Paytm; a “…More” option lets the user pick any installed UPI app. Beneath that is the option to pay by typing a UPI ID (VPA) and pressing a Make Payment button, and finally there is a QR code option that can be scanned from any UPI app. On desktop, only the VPA field and the QR code are shown because deep-linking to apps is unreliable there. The order summary stays visible at the top.

When the customer picks a payment method, the system records a new payment attempt tied to the same order. Each attempt gets its own index (1, 2, 3) and a unique idempotency key so repeated clicks or slow connections do not create duplicate charges. The backend then tells Cashfree to start the payment: for app intent it specifies which UPI app to open, for VPA it passes the typed address, and for QR it requests the QR payload. At this moment the order’s payment status changes to processing and the page shows a waiting banner. Invalid VPA formats are caught early with an inline error so no request is sent. QR codes show an expiry timer and can be regenerated; each regeneration is just another attempt, still linked to the same order.

While the user is approving or cancelling the payment in their app, the website waits. It may poll the order state every few seconds, but the true source of status is the webhook Cashfree sends back. Each incoming event is normalised into one of four buckets: CREATED, PENDING, COMPLETED, or FAILED. CREATED keeps the payment status as pending, PENDING moves it to processing, COMPLETED sets it to paid and upgrades the fulfillment status to confirmed if it was still pending, and FAILED sets it to failed but leaves the fulfillment status untouched so the order can be retried. Only these webhook or verification calls are trusted to flip the order to paid; the page never assumes success just because the user returned from an app.

If the payment succeeds, the shopper is sent to a thank-you page showing the paid order. In the database the order now shows paymentStatus = paid and if it was still pending it becomes confirmed. Cashfree will show the payment as captured or success. If the payment fails or the user cancels, the Make Payment page stays open with a clear error and lets the user retry up to three times per channel or switch to another method. If the gateway fails three times but the backend order is fine, the message says your team will contact the customer; if both sides failed, it asks them to try again later.

Throughout the journey there are safeguards. Duplicate clicks on the pay button are disabled while a request is in flight. Slow webhooks keep the screen in “processing” until the truth arrives. A user can scan a QR on their phone even if they started on desktop; the webhook will complete the order regardless. Secrets such as API keys and webhook signatures are never exposed to the client, and only the logged-in customer can access their payment page. Inputs like UPI IDs are validated and logs mask sensitive data.